syntax = "proto3";

import "common.proto";

option java_multiple_files = true;
option java_package = "papyrus.channel.node";

// Light client interface for outgoing channels
service OutgoingChannelClient {
    // Request outgoing channel state with given participant 
    rpc GetChannels (ChannelStatusRequest) returns (ChannelStatusResponse);

    // Register transfer promise 
    rpc RegisterTransfers (RegisterTransfersRequest) returns (RegisterTransfersResponse);
}

// Light client interface for incoming channels
service IncomingChannelClient {
    // Request incoming channels' states with given participant 
    rpc GetChannels (ChannelStatusRequest) returns (ChannelStatusResponse);

    // Register incoming transfers promises 
    rpc RegisterTransfers (RegisterTransfersRequest) returns (RegisterTransfersResponse);
}

message ChannelStatusMessage {
    string channel_address = 1;
    string participant_address = 2;
    ChannelProperties properties = 3;
    bool active = 4;
}

message ChannelStatusRequest {
    string participant_address = 1;
    bool active_only = 2;
}

message ChannelStatusResponse {
    repeated ChannelStatusMessage channel = 1;
}

message RegisterTransfersRequest {
    repeated TransferMessage transfer = 1;
}

// Micropayment
message TransferMessage {
    // Unique id
    string transfer_id = 1;
    // Payment channel address as HEX
    string channel_address = 2;
    // Payment value in wei as decimal string
    string value = 3;
    // Signature as HEX
    string signature = 4;
}

message RegisterTransfersResponse {
    Error error = 1;
}
